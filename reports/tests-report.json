{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-13T00:12:46.895Z",
    "end": "2024-03-13T00:12:53.531Z",
    "duration": 6636,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8b5c8ce0-c68e-4435-adda-1429cedd252b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3a29e946-8cb0-45a4-baae-2c65bf667c1b",
          "title": "add todo app tests",
          "fullFile": "/Users/giancarlocarlin/Projects/selenium-practice/test/secondTestWithMocha.js",
          "file": "/test/secondTestWithMocha.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo app tests successfully adds a todo to application",
              "timedOut": null,
              "duration": 6209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n// navigate to the url\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add a todo using locators and actions\nawait driver\n  .findElement({ id: \"sampletodotext\" })\n  .sendKeys(\"Learn to automate with Selenium\");\nawait driver.findElement({ id: \"addbutton\" }).click();\n// assert the todo\nlet newTodo = await driver\n  .findElement({\n    xpath: \"//li[last()]\",\n  })\n  .getText();\n// assert using chai should library\nnewTodo.should.equal(\"Learn to automate with Selenium\");\nawait driver.quit();",
              "err": {},
              "uuid": "1e22f6b9-136d-4002-8801-f48cdc0f6fa8",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e22f6b9-136d-4002-8801-f48cdc0f6fa8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6209,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "f8ce552b-1344-40e7-8a2b-a2936556691b",
          "title": "add another todo app test",
          "fullFile": "/Users/giancarlocarlin/Projects/selenium-practice/test/thirdTest.js",
          "file": "/test/thirdTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds another todo to application",
              "fullTitle": "add another todo app test successfully adds another todo to application",
              "timedOut": null,
              "duration": 6286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n// navigate to the url\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add a todo using locators and actions\nawait driver\n  .findElement({ id: \"sampletodotext\" })\n  .sendKeys(\"Learn to automate with Selenium\");\nawait driver.findElement({ id: \"addbutton\" }).click();\n// assert the todo\nlet newTodo = await driver\n  .findElement({\n    xpath: \"//li[last()]\",\n  })\n  .getText();\n// assert using chai should library\nnewTodo.should.equal(\"Learn to automate with Selenium\");\nawait driver.quit();",
              "err": {},
              "uuid": "e3186af8-2d51-467d-a9cf-da7f3e9bfa7c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3186af8-2d51-467d-a9cf-da7f3e9bfa7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6286,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "tests-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "tests-report"
      },
      "version": "6.2.0"
    }
  }
}